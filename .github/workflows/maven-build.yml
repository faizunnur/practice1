# Name for your workflow, which will be displayed in the Actions tab
name: Java CI with Maven

# Controls when the workflow will run
on:
  # Triggers the workflow on push events for the "main" branch
  push:
    branches: [ "main" ]
  # Triggers the workflow on pull request events targeting the "main" branch
  pull_request:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # The "build" job
  build:
    # The type of runner that the job will run on. We're using the latest Ubuntu from GitHub.
    runs-on: ubuntu-latest

    # A sequence of tasks called "steps" that will be executed as part of the job
    steps:
      # Step 1: Checks out your repository's code so the workflow can access it
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Sets up the Java Development Kit (JDK) on the runner
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # Step 3: Runs the Maven build command to compile and package the application
      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Step 4 (Optional but highly recommended): Upload the built JAR file as an artifact
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar